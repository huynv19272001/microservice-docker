server:
    port: 18111
#    servlet:
#        context-path: /${spring.application.name}
spring:
    main:
        web-application-type: reactive
        allow-bean-definition-overriding: true
    application:
        name: '@project.artifactId@'
    jackson:
        property-naming-strategy: SNAKE_CASE
        time-zone: GMT+7
    sleuth:
        sampler:
            probability: 1
    zipkin:
        base-url: ${ZIPKIN_SERVICE:http://10.36.126.15:9411/}
    elasticsearch:
        rest:
            uris: ${ES_HOSTS:10.36.126.15:9200}
    cloud:
        gateway:
            globalcors:
                corsConfigurations:
                    '[/**]':
                        allowedOrigins: "*"
                        allowedMethods: "*"
                        allowedHeaders: "*"
            discovery:
                locator:
                    lower-case-service-id: true
                    enabled: true
            httpclient:
                connect-timeout: 60000
                response-timeout: 60s
            metrics:
                enabled: true
security:
    enable:
        csrf: false
ribbon:
    ConnectTimeout: 60000
    ReadTimeout: 60000
    ServerListRefreshInterval: 5000
    eureka:
        enabled: true
eureka:
    client:
        fetchRegistry: true
        healthcheck:
            enabled: true
        registerWithEureka: true
        registryFetchIntervalSeconds: 15
        service-url:
            defaultZone: ${EUREKA_REGISTRY_SERVICE:http://admin:123456@localhost:18001/eureka}
    instance:
        hostname: localhost
        lease-expiration-duration-in-seconds: 5
        lease-renewal-interval-in-seconds: 2
        preferIpAddress: true
info:
    run:
        dir: ${user.dir}
        user: ${user.name}
logging:
    level:
        org:
            springframework:
                data:
                    mongodb:
                        core:
                            MongoTemplate: DEBUG
                    elasticsearch:
                        core: DEBUG
#                web: DEBUG
                web.HttpLogging: INFO
                web.filter.CommonsRequestLoggingFilter: DEBUG
#        reactor.netty: DEBUG
        com.netflix.loadbalancer.LoadBalancerContext: DEBUG
management:
    endpoints:
        web:
            exposure:
                include: '*'
    health:
        elasticsearch:
            enabled: false
service:
    api:
        sequence: http://esb-cache-service/sequence/next/USER_ESB.SEQ_ESB_SYS_LOG
